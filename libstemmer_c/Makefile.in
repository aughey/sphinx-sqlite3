# Makefile.in generated by automake 1.9.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# libstemmer/mkinc.mak: List of stemming module source files
#
# This file is generated by mkmodules.pl from a list of module names.
# Do not edit manually.
#
# Modules included by this file are: danish, dutch, english, finnish, french,
# german, hungarian, italian, norwegian, porter, portuguese, romanian,
# russian, spanish, swedish, turkish


SOURCES = $(libstemmer_a_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
DIST_COMMON = README $(am__noinst_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/mkinc.mak
subdir = libstemmer_c
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libstemmer_a_AR = $(AR) $(ARFLAGS)
libstemmer_a_LIBADD =
am__libstemmer_a_SOURCES_DIST = src_c/stem_ISO_8859_1_danish.c \
	src_c/stem_UTF_8_danish.c src_c/stem_ISO_8859_1_dutch.c \
	src_c/stem_UTF_8_dutch.c src_c/stem_ISO_8859_1_english.c \
	src_c/stem_UTF_8_english.c src_c/stem_ISO_8859_1_finnish.c \
	src_c/stem_UTF_8_finnish.c src_c/stem_ISO_8859_1_french.c \
	src_c/stem_UTF_8_french.c src_c/stem_ISO_8859_1_german.c \
	src_c/stem_UTF_8_german.c src_c/stem_ISO_8859_1_hungarian.c \
	src_c/stem_UTF_8_hungarian.c src_c/stem_ISO_8859_1_italian.c \
	src_c/stem_UTF_8_italian.c src_c/stem_ISO_8859_1_norwegian.c \
	src_c/stem_UTF_8_norwegian.c src_c/stem_ISO_8859_1_porter.c \
	src_c/stem_UTF_8_porter.c src_c/stem_ISO_8859_1_portuguese.c \
	src_c/stem_UTF_8_portuguese.c src_c/stem_ISO_8859_2_romanian.c \
	src_c/stem_UTF_8_romanian.c src_c/stem_KOI8_R_russian.c \
	src_c/stem_UTF_8_russian.c src_c/stem_ISO_8859_1_spanish.c \
	src_c/stem_UTF_8_spanish.c src_c/stem_ISO_8859_1_swedish.c \
	src_c/stem_UTF_8_swedish.c src_c/stem_UTF_8_turkish.c \
	runtime/api.c runtime/utilities.c libstemmer/libstemmer.c
@USE_LIBSTEMMER_TRUE@am__objects_1 = stem_ISO_8859_1_danish.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_danish.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_dutch.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_dutch.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_english.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_english.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_finnish.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_finnish.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_french.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_french.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_german.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_german.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_hungarian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_hungarian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_italian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_italian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_norwegian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_norwegian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_porter.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_porter.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_portuguese.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_portuguese.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_2_romanian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_romanian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_KOI8_R_russian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_russian.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_spanish.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_spanish.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_ISO_8859_1_swedish.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_swedish.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	stem_UTF_8_turkish.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	api.$(OBJEXT) utilities.$(OBJEXT) \
@USE_LIBSTEMMER_TRUE@	libstemmer.$(OBJEXT)
@USE_LIBSTEMMER_TRUE@am_libstemmer_a_OBJECTS = $(am__objects_1)
libstemmer_a_OBJECTS = $(am_libstemmer_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/config
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libstemmer_a_SOURCES)
DIST_SOURCES = $(am__libstemmer_a_SOURCES_DIST)
am__noinst_HEADERS_DIST = src_c/stem_ISO_8859_1_danish.h \
	src_c/stem_UTF_8_danish.h src_c/stem_ISO_8859_1_dutch.h \
	src_c/stem_UTF_8_dutch.h src_c/stem_ISO_8859_1_english.h \
	src_c/stem_UTF_8_english.h src_c/stem_ISO_8859_1_finnish.h \
	src_c/stem_UTF_8_finnish.h src_c/stem_ISO_8859_1_french.h \
	src_c/stem_UTF_8_french.h src_c/stem_ISO_8859_1_german.h \
	src_c/stem_UTF_8_german.h src_c/stem_ISO_8859_1_hungarian.h \
	src_c/stem_UTF_8_hungarian.h src_c/stem_ISO_8859_1_italian.h \
	src_c/stem_UTF_8_italian.h src_c/stem_ISO_8859_1_norwegian.h \
	src_c/stem_UTF_8_norwegian.h src_c/stem_ISO_8859_1_porter.h \
	src_c/stem_UTF_8_porter.h src_c/stem_ISO_8859_1_portuguese.h \
	src_c/stem_UTF_8_portuguese.h src_c/stem_ISO_8859_2_romanian.h \
	src_c/stem_UTF_8_romanian.h src_c/stem_KOI8_R_russian.h \
	src_c/stem_UTF_8_russian.h src_c/stem_ISO_8859_1_spanish.h \
	src_c/stem_UTF_8_spanish.h src_c/stem_ISO_8859_1_swedish.h \
	src_c/stem_UTF_8_swedish.h src_c/stem_UTF_8_turkish.h \
	include/libstemmer.h libstemmer/modules.h runtime/api.h \
	runtime/header.h
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONFDIR = @CONFDIR@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_LIBS = @MYSQL_LIBS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PGSQL_CFLAGS = @PGSQL_CFLAGS@
PGSQL_LIBS = @PGSQL_LIBS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_LIBSTEMMER_FALSE = @USE_LIBSTEMMER_FALSE@
USE_LIBSTEMMER_TRUE = @USE_LIBSTEMMER_TRUE@
USE_MYSQL_FALSE = @USE_MYSQL_FALSE@
USE_MYSQL_TRUE = @USE_MYSQL_TRUE@
USE_PGSQL_FALSE = @USE_PGSQL_FALSE@
USE_PGSQL_TRUE = @USE_PGSQL_TRUE@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pgconfig = @pgconfig@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
@USE_LIBSTEMMER_TRUE@noinst_LIBRARIES = libstemmer.a
@USE_LIBSTEMMER_TRUE@snowball_sources = \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_danish.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_danish.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_dutch.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_dutch.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_english.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_english.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_finnish.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_finnish.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_french.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_french.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_german.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_german.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_hungarian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_hungarian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_italian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_italian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_norwegian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_norwegian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_porter.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_porter.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_portuguese.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_portuguese.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_2_romanian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_romanian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_KOI8_R_russian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_russian.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_spanish.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_spanish.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_swedish.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_swedish.c \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_turkish.c \
@USE_LIBSTEMMER_TRUE@  runtime/api.c \
@USE_LIBSTEMMER_TRUE@  runtime/utilities.c \
@USE_LIBSTEMMER_TRUE@  libstemmer/libstemmer.c

@USE_LIBSTEMMER_TRUE@snowball_headers = \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_danish.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_danish.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_dutch.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_dutch.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_english.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_english.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_finnish.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_finnish.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_french.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_french.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_german.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_german.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_hungarian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_hungarian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_italian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_italian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_norwegian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_norwegian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_porter.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_porter.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_portuguese.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_portuguese.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_2_romanian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_romanian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_KOI8_R_russian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_russian.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_spanish.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_spanish.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_ISO_8859_1_swedish.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_swedish.h \
@USE_LIBSTEMMER_TRUE@  src_c/stem_UTF_8_turkish.h \
@USE_LIBSTEMMER_TRUE@  include/libstemmer.h \
@USE_LIBSTEMMER_TRUE@  libstemmer/modules.h \
@USE_LIBSTEMMER_TRUE@  runtime/api.h \
@USE_LIBSTEMMER_TRUE@  runtime/header.h

@USE_LIBSTEMMER_TRUE@noinst_HEADERS = $(snowball_headers)
@USE_LIBSTEMMER_TRUE@libstemmer_a_SOURCES = $(snowball_sources)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/mkinc.mak $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  libstemmer_c/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  libstemmer_c/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libstemmer.a: $(libstemmer_a_OBJECTS) $(libstemmer_a_DEPENDENCIES) 
	-rm -f libstemmer.a
	$(libstemmer_a_AR) libstemmer.a $(libstemmer_a_OBJECTS) $(libstemmer_a_LIBADD)
	$(RANLIB) libstemmer.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/api.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libstemmer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_danish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_dutch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_english.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_finnish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_french.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_german.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_hungarian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_italian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_norwegian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_porter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_portuguese.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_spanish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_1_swedish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_ISO_8859_2_romanian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_KOI8_R_russian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_danish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_dutch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_english.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_finnish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_french.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_german.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_hungarian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_italian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_norwegian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_porter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_portuguese.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_romanian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_russian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_spanish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_swedish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stem_UTF_8_turkish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utilities.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

stem_ISO_8859_1_danish.o: src_c/stem_ISO_8859_1_danish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_danish.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_danish.Tpo" -c -o stem_ISO_8859_1_danish.o `test -f 'src_c/stem_ISO_8859_1_danish.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_danish.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_danish.Tpo" "$(DEPDIR)/stem_ISO_8859_1_danish.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_danish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_danish.c' object='stem_ISO_8859_1_danish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_danish.o `test -f 'src_c/stem_ISO_8859_1_danish.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_danish.c

stem_ISO_8859_1_danish.obj: src_c/stem_ISO_8859_1_danish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_danish.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_danish.Tpo" -c -o stem_ISO_8859_1_danish.obj `if test -f 'src_c/stem_ISO_8859_1_danish.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_danish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_danish.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_danish.Tpo" "$(DEPDIR)/stem_ISO_8859_1_danish.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_danish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_danish.c' object='stem_ISO_8859_1_danish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_danish.obj `if test -f 'src_c/stem_ISO_8859_1_danish.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_danish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_danish.c'; fi`

stem_UTF_8_danish.o: src_c/stem_UTF_8_danish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_danish.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_danish.Tpo" -c -o stem_UTF_8_danish.o `test -f 'src_c/stem_UTF_8_danish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_danish.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_danish.Tpo" "$(DEPDIR)/stem_UTF_8_danish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_danish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_danish.c' object='stem_UTF_8_danish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_danish.o `test -f 'src_c/stem_UTF_8_danish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_danish.c

stem_UTF_8_danish.obj: src_c/stem_UTF_8_danish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_danish.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_danish.Tpo" -c -o stem_UTF_8_danish.obj `if test -f 'src_c/stem_UTF_8_danish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_danish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_danish.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_danish.Tpo" "$(DEPDIR)/stem_UTF_8_danish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_danish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_danish.c' object='stem_UTF_8_danish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_danish.obj `if test -f 'src_c/stem_UTF_8_danish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_danish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_danish.c'; fi`

stem_ISO_8859_1_dutch.o: src_c/stem_ISO_8859_1_dutch.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_dutch.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_dutch.Tpo" -c -o stem_ISO_8859_1_dutch.o `test -f 'src_c/stem_ISO_8859_1_dutch.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_dutch.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_dutch.Tpo" "$(DEPDIR)/stem_ISO_8859_1_dutch.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_dutch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_dutch.c' object='stem_ISO_8859_1_dutch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_dutch.o `test -f 'src_c/stem_ISO_8859_1_dutch.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_dutch.c

stem_ISO_8859_1_dutch.obj: src_c/stem_ISO_8859_1_dutch.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_dutch.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_dutch.Tpo" -c -o stem_ISO_8859_1_dutch.obj `if test -f 'src_c/stem_ISO_8859_1_dutch.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_dutch.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_dutch.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_dutch.Tpo" "$(DEPDIR)/stem_ISO_8859_1_dutch.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_dutch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_dutch.c' object='stem_ISO_8859_1_dutch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_dutch.obj `if test -f 'src_c/stem_ISO_8859_1_dutch.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_dutch.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_dutch.c'; fi`

stem_UTF_8_dutch.o: src_c/stem_UTF_8_dutch.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_dutch.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_dutch.Tpo" -c -o stem_UTF_8_dutch.o `test -f 'src_c/stem_UTF_8_dutch.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_dutch.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_dutch.Tpo" "$(DEPDIR)/stem_UTF_8_dutch.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_dutch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_dutch.c' object='stem_UTF_8_dutch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_dutch.o `test -f 'src_c/stem_UTF_8_dutch.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_dutch.c

stem_UTF_8_dutch.obj: src_c/stem_UTF_8_dutch.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_dutch.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_dutch.Tpo" -c -o stem_UTF_8_dutch.obj `if test -f 'src_c/stem_UTF_8_dutch.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_dutch.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_dutch.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_dutch.Tpo" "$(DEPDIR)/stem_UTF_8_dutch.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_dutch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_dutch.c' object='stem_UTF_8_dutch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_dutch.obj `if test -f 'src_c/stem_UTF_8_dutch.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_dutch.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_dutch.c'; fi`

stem_ISO_8859_1_english.o: src_c/stem_ISO_8859_1_english.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_english.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_english.Tpo" -c -o stem_ISO_8859_1_english.o `test -f 'src_c/stem_ISO_8859_1_english.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_english.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_english.Tpo" "$(DEPDIR)/stem_ISO_8859_1_english.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_english.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_english.c' object='stem_ISO_8859_1_english.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_english.o `test -f 'src_c/stem_ISO_8859_1_english.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_english.c

stem_ISO_8859_1_english.obj: src_c/stem_ISO_8859_1_english.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_english.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_english.Tpo" -c -o stem_ISO_8859_1_english.obj `if test -f 'src_c/stem_ISO_8859_1_english.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_english.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_english.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_english.Tpo" "$(DEPDIR)/stem_ISO_8859_1_english.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_english.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_english.c' object='stem_ISO_8859_1_english.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_english.obj `if test -f 'src_c/stem_ISO_8859_1_english.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_english.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_english.c'; fi`

stem_UTF_8_english.o: src_c/stem_UTF_8_english.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_english.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_english.Tpo" -c -o stem_UTF_8_english.o `test -f 'src_c/stem_UTF_8_english.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_english.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_english.Tpo" "$(DEPDIR)/stem_UTF_8_english.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_english.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_english.c' object='stem_UTF_8_english.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_english.o `test -f 'src_c/stem_UTF_8_english.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_english.c

stem_UTF_8_english.obj: src_c/stem_UTF_8_english.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_english.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_english.Tpo" -c -o stem_UTF_8_english.obj `if test -f 'src_c/stem_UTF_8_english.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_english.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_english.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_english.Tpo" "$(DEPDIR)/stem_UTF_8_english.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_english.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_english.c' object='stem_UTF_8_english.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_english.obj `if test -f 'src_c/stem_UTF_8_english.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_english.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_english.c'; fi`

stem_ISO_8859_1_finnish.o: src_c/stem_ISO_8859_1_finnish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_finnish.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_finnish.Tpo" -c -o stem_ISO_8859_1_finnish.o `test -f 'src_c/stem_ISO_8859_1_finnish.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_finnish.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_finnish.Tpo" "$(DEPDIR)/stem_ISO_8859_1_finnish.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_finnish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_finnish.c' object='stem_ISO_8859_1_finnish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_finnish.o `test -f 'src_c/stem_ISO_8859_1_finnish.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_finnish.c

stem_ISO_8859_1_finnish.obj: src_c/stem_ISO_8859_1_finnish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_finnish.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_finnish.Tpo" -c -o stem_ISO_8859_1_finnish.obj `if test -f 'src_c/stem_ISO_8859_1_finnish.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_finnish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_finnish.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_finnish.Tpo" "$(DEPDIR)/stem_ISO_8859_1_finnish.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_finnish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_finnish.c' object='stem_ISO_8859_1_finnish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_finnish.obj `if test -f 'src_c/stem_ISO_8859_1_finnish.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_finnish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_finnish.c'; fi`

stem_UTF_8_finnish.o: src_c/stem_UTF_8_finnish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_finnish.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_finnish.Tpo" -c -o stem_UTF_8_finnish.o `test -f 'src_c/stem_UTF_8_finnish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_finnish.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_finnish.Tpo" "$(DEPDIR)/stem_UTF_8_finnish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_finnish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_finnish.c' object='stem_UTF_8_finnish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_finnish.o `test -f 'src_c/stem_UTF_8_finnish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_finnish.c

stem_UTF_8_finnish.obj: src_c/stem_UTF_8_finnish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_finnish.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_finnish.Tpo" -c -o stem_UTF_8_finnish.obj `if test -f 'src_c/stem_UTF_8_finnish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_finnish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_finnish.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_finnish.Tpo" "$(DEPDIR)/stem_UTF_8_finnish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_finnish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_finnish.c' object='stem_UTF_8_finnish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_finnish.obj `if test -f 'src_c/stem_UTF_8_finnish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_finnish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_finnish.c'; fi`

stem_ISO_8859_1_french.o: src_c/stem_ISO_8859_1_french.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_french.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_french.Tpo" -c -o stem_ISO_8859_1_french.o `test -f 'src_c/stem_ISO_8859_1_french.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_french.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_french.Tpo" "$(DEPDIR)/stem_ISO_8859_1_french.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_french.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_french.c' object='stem_ISO_8859_1_french.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_french.o `test -f 'src_c/stem_ISO_8859_1_french.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_french.c

stem_ISO_8859_1_french.obj: src_c/stem_ISO_8859_1_french.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_french.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_french.Tpo" -c -o stem_ISO_8859_1_french.obj `if test -f 'src_c/stem_ISO_8859_1_french.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_french.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_french.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_french.Tpo" "$(DEPDIR)/stem_ISO_8859_1_french.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_french.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_french.c' object='stem_ISO_8859_1_french.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_french.obj `if test -f 'src_c/stem_ISO_8859_1_french.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_french.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_french.c'; fi`

stem_UTF_8_french.o: src_c/stem_UTF_8_french.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_french.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_french.Tpo" -c -o stem_UTF_8_french.o `test -f 'src_c/stem_UTF_8_french.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_french.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_french.Tpo" "$(DEPDIR)/stem_UTF_8_french.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_french.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_french.c' object='stem_UTF_8_french.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_french.o `test -f 'src_c/stem_UTF_8_french.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_french.c

stem_UTF_8_french.obj: src_c/stem_UTF_8_french.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_french.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_french.Tpo" -c -o stem_UTF_8_french.obj `if test -f 'src_c/stem_UTF_8_french.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_french.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_french.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_french.Tpo" "$(DEPDIR)/stem_UTF_8_french.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_french.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_french.c' object='stem_UTF_8_french.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_french.obj `if test -f 'src_c/stem_UTF_8_french.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_french.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_french.c'; fi`

stem_ISO_8859_1_german.o: src_c/stem_ISO_8859_1_german.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_german.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_german.Tpo" -c -o stem_ISO_8859_1_german.o `test -f 'src_c/stem_ISO_8859_1_german.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_german.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_german.Tpo" "$(DEPDIR)/stem_ISO_8859_1_german.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_german.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_german.c' object='stem_ISO_8859_1_german.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_german.o `test -f 'src_c/stem_ISO_8859_1_german.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_german.c

stem_ISO_8859_1_german.obj: src_c/stem_ISO_8859_1_german.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_german.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_german.Tpo" -c -o stem_ISO_8859_1_german.obj `if test -f 'src_c/stem_ISO_8859_1_german.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_german.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_german.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_german.Tpo" "$(DEPDIR)/stem_ISO_8859_1_german.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_german.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_german.c' object='stem_ISO_8859_1_german.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_german.obj `if test -f 'src_c/stem_ISO_8859_1_german.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_german.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_german.c'; fi`

stem_UTF_8_german.o: src_c/stem_UTF_8_german.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_german.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_german.Tpo" -c -o stem_UTF_8_german.o `test -f 'src_c/stem_UTF_8_german.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_german.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_german.Tpo" "$(DEPDIR)/stem_UTF_8_german.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_german.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_german.c' object='stem_UTF_8_german.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_german.o `test -f 'src_c/stem_UTF_8_german.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_german.c

stem_UTF_8_german.obj: src_c/stem_UTF_8_german.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_german.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_german.Tpo" -c -o stem_UTF_8_german.obj `if test -f 'src_c/stem_UTF_8_german.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_german.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_german.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_german.Tpo" "$(DEPDIR)/stem_UTF_8_german.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_german.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_german.c' object='stem_UTF_8_german.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_german.obj `if test -f 'src_c/stem_UTF_8_german.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_german.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_german.c'; fi`

stem_ISO_8859_1_hungarian.o: src_c/stem_ISO_8859_1_hungarian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_hungarian.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_hungarian.Tpo" -c -o stem_ISO_8859_1_hungarian.o `test -f 'src_c/stem_ISO_8859_1_hungarian.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_hungarian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_hungarian.Tpo" "$(DEPDIR)/stem_ISO_8859_1_hungarian.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_hungarian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_hungarian.c' object='stem_ISO_8859_1_hungarian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_hungarian.o `test -f 'src_c/stem_ISO_8859_1_hungarian.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_hungarian.c

stem_ISO_8859_1_hungarian.obj: src_c/stem_ISO_8859_1_hungarian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_hungarian.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_hungarian.Tpo" -c -o stem_ISO_8859_1_hungarian.obj `if test -f 'src_c/stem_ISO_8859_1_hungarian.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_hungarian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_hungarian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_hungarian.Tpo" "$(DEPDIR)/stem_ISO_8859_1_hungarian.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_hungarian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_hungarian.c' object='stem_ISO_8859_1_hungarian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_hungarian.obj `if test -f 'src_c/stem_ISO_8859_1_hungarian.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_hungarian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_hungarian.c'; fi`

stem_UTF_8_hungarian.o: src_c/stem_UTF_8_hungarian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_hungarian.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_hungarian.Tpo" -c -o stem_UTF_8_hungarian.o `test -f 'src_c/stem_UTF_8_hungarian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_hungarian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_hungarian.Tpo" "$(DEPDIR)/stem_UTF_8_hungarian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_hungarian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_hungarian.c' object='stem_UTF_8_hungarian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_hungarian.o `test -f 'src_c/stem_UTF_8_hungarian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_hungarian.c

stem_UTF_8_hungarian.obj: src_c/stem_UTF_8_hungarian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_hungarian.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_hungarian.Tpo" -c -o stem_UTF_8_hungarian.obj `if test -f 'src_c/stem_UTF_8_hungarian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_hungarian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_hungarian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_hungarian.Tpo" "$(DEPDIR)/stem_UTF_8_hungarian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_hungarian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_hungarian.c' object='stem_UTF_8_hungarian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_hungarian.obj `if test -f 'src_c/stem_UTF_8_hungarian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_hungarian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_hungarian.c'; fi`

stem_ISO_8859_1_italian.o: src_c/stem_ISO_8859_1_italian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_italian.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_italian.Tpo" -c -o stem_ISO_8859_1_italian.o `test -f 'src_c/stem_ISO_8859_1_italian.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_italian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_italian.Tpo" "$(DEPDIR)/stem_ISO_8859_1_italian.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_italian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_italian.c' object='stem_ISO_8859_1_italian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_italian.o `test -f 'src_c/stem_ISO_8859_1_italian.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_italian.c

stem_ISO_8859_1_italian.obj: src_c/stem_ISO_8859_1_italian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_italian.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_italian.Tpo" -c -o stem_ISO_8859_1_italian.obj `if test -f 'src_c/stem_ISO_8859_1_italian.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_italian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_italian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_italian.Tpo" "$(DEPDIR)/stem_ISO_8859_1_italian.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_italian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_italian.c' object='stem_ISO_8859_1_italian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_italian.obj `if test -f 'src_c/stem_ISO_8859_1_italian.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_italian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_italian.c'; fi`

stem_UTF_8_italian.o: src_c/stem_UTF_8_italian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_italian.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_italian.Tpo" -c -o stem_UTF_8_italian.o `test -f 'src_c/stem_UTF_8_italian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_italian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_italian.Tpo" "$(DEPDIR)/stem_UTF_8_italian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_italian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_italian.c' object='stem_UTF_8_italian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_italian.o `test -f 'src_c/stem_UTF_8_italian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_italian.c

stem_UTF_8_italian.obj: src_c/stem_UTF_8_italian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_italian.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_italian.Tpo" -c -o stem_UTF_8_italian.obj `if test -f 'src_c/stem_UTF_8_italian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_italian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_italian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_italian.Tpo" "$(DEPDIR)/stem_UTF_8_italian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_italian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_italian.c' object='stem_UTF_8_italian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_italian.obj `if test -f 'src_c/stem_UTF_8_italian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_italian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_italian.c'; fi`

stem_ISO_8859_1_norwegian.o: src_c/stem_ISO_8859_1_norwegian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_norwegian.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_norwegian.Tpo" -c -o stem_ISO_8859_1_norwegian.o `test -f 'src_c/stem_ISO_8859_1_norwegian.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_norwegian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_norwegian.Tpo" "$(DEPDIR)/stem_ISO_8859_1_norwegian.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_norwegian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_norwegian.c' object='stem_ISO_8859_1_norwegian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_norwegian.o `test -f 'src_c/stem_ISO_8859_1_norwegian.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_norwegian.c

stem_ISO_8859_1_norwegian.obj: src_c/stem_ISO_8859_1_norwegian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_norwegian.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_norwegian.Tpo" -c -o stem_ISO_8859_1_norwegian.obj `if test -f 'src_c/stem_ISO_8859_1_norwegian.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_norwegian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_norwegian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_norwegian.Tpo" "$(DEPDIR)/stem_ISO_8859_1_norwegian.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_norwegian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_norwegian.c' object='stem_ISO_8859_1_norwegian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_norwegian.obj `if test -f 'src_c/stem_ISO_8859_1_norwegian.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_norwegian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_norwegian.c'; fi`

stem_UTF_8_norwegian.o: src_c/stem_UTF_8_norwegian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_norwegian.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_norwegian.Tpo" -c -o stem_UTF_8_norwegian.o `test -f 'src_c/stem_UTF_8_norwegian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_norwegian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_norwegian.Tpo" "$(DEPDIR)/stem_UTF_8_norwegian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_norwegian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_norwegian.c' object='stem_UTF_8_norwegian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_norwegian.o `test -f 'src_c/stem_UTF_8_norwegian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_norwegian.c

stem_UTF_8_norwegian.obj: src_c/stem_UTF_8_norwegian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_norwegian.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_norwegian.Tpo" -c -o stem_UTF_8_norwegian.obj `if test -f 'src_c/stem_UTF_8_norwegian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_norwegian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_norwegian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_norwegian.Tpo" "$(DEPDIR)/stem_UTF_8_norwegian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_norwegian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_norwegian.c' object='stem_UTF_8_norwegian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_norwegian.obj `if test -f 'src_c/stem_UTF_8_norwegian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_norwegian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_norwegian.c'; fi`

stem_ISO_8859_1_porter.o: src_c/stem_ISO_8859_1_porter.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_porter.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_porter.Tpo" -c -o stem_ISO_8859_1_porter.o `test -f 'src_c/stem_ISO_8859_1_porter.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_porter.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_porter.Tpo" "$(DEPDIR)/stem_ISO_8859_1_porter.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_porter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_porter.c' object='stem_ISO_8859_1_porter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_porter.o `test -f 'src_c/stem_ISO_8859_1_porter.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_porter.c

stem_ISO_8859_1_porter.obj: src_c/stem_ISO_8859_1_porter.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_porter.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_porter.Tpo" -c -o stem_ISO_8859_1_porter.obj `if test -f 'src_c/stem_ISO_8859_1_porter.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_porter.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_porter.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_porter.Tpo" "$(DEPDIR)/stem_ISO_8859_1_porter.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_porter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_porter.c' object='stem_ISO_8859_1_porter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_porter.obj `if test -f 'src_c/stem_ISO_8859_1_porter.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_porter.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_porter.c'; fi`

stem_UTF_8_porter.o: src_c/stem_UTF_8_porter.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_porter.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_porter.Tpo" -c -o stem_UTF_8_porter.o `test -f 'src_c/stem_UTF_8_porter.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_porter.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_porter.Tpo" "$(DEPDIR)/stem_UTF_8_porter.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_porter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_porter.c' object='stem_UTF_8_porter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_porter.o `test -f 'src_c/stem_UTF_8_porter.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_porter.c

stem_UTF_8_porter.obj: src_c/stem_UTF_8_porter.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_porter.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_porter.Tpo" -c -o stem_UTF_8_porter.obj `if test -f 'src_c/stem_UTF_8_porter.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_porter.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_porter.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_porter.Tpo" "$(DEPDIR)/stem_UTF_8_porter.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_porter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_porter.c' object='stem_UTF_8_porter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_porter.obj `if test -f 'src_c/stem_UTF_8_porter.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_porter.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_porter.c'; fi`

stem_ISO_8859_1_portuguese.o: src_c/stem_ISO_8859_1_portuguese.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_portuguese.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_portuguese.Tpo" -c -o stem_ISO_8859_1_portuguese.o `test -f 'src_c/stem_ISO_8859_1_portuguese.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_portuguese.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_portuguese.Tpo" "$(DEPDIR)/stem_ISO_8859_1_portuguese.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_portuguese.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_portuguese.c' object='stem_ISO_8859_1_portuguese.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_portuguese.o `test -f 'src_c/stem_ISO_8859_1_portuguese.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_portuguese.c

stem_ISO_8859_1_portuguese.obj: src_c/stem_ISO_8859_1_portuguese.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_portuguese.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_portuguese.Tpo" -c -o stem_ISO_8859_1_portuguese.obj `if test -f 'src_c/stem_ISO_8859_1_portuguese.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_portuguese.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_portuguese.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_portuguese.Tpo" "$(DEPDIR)/stem_ISO_8859_1_portuguese.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_portuguese.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_portuguese.c' object='stem_ISO_8859_1_portuguese.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_portuguese.obj `if test -f 'src_c/stem_ISO_8859_1_portuguese.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_portuguese.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_portuguese.c'; fi`

stem_UTF_8_portuguese.o: src_c/stem_UTF_8_portuguese.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_portuguese.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_portuguese.Tpo" -c -o stem_UTF_8_portuguese.o `test -f 'src_c/stem_UTF_8_portuguese.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_portuguese.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_portuguese.Tpo" "$(DEPDIR)/stem_UTF_8_portuguese.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_portuguese.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_portuguese.c' object='stem_UTF_8_portuguese.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_portuguese.o `test -f 'src_c/stem_UTF_8_portuguese.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_portuguese.c

stem_UTF_8_portuguese.obj: src_c/stem_UTF_8_portuguese.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_portuguese.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_portuguese.Tpo" -c -o stem_UTF_8_portuguese.obj `if test -f 'src_c/stem_UTF_8_portuguese.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_portuguese.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_portuguese.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_portuguese.Tpo" "$(DEPDIR)/stem_UTF_8_portuguese.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_portuguese.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_portuguese.c' object='stem_UTF_8_portuguese.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_portuguese.obj `if test -f 'src_c/stem_UTF_8_portuguese.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_portuguese.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_portuguese.c'; fi`

stem_ISO_8859_2_romanian.o: src_c/stem_ISO_8859_2_romanian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_2_romanian.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_2_romanian.Tpo" -c -o stem_ISO_8859_2_romanian.o `test -f 'src_c/stem_ISO_8859_2_romanian.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_2_romanian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_2_romanian.Tpo" "$(DEPDIR)/stem_ISO_8859_2_romanian.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_2_romanian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_2_romanian.c' object='stem_ISO_8859_2_romanian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_2_romanian.o `test -f 'src_c/stem_ISO_8859_2_romanian.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_2_romanian.c

stem_ISO_8859_2_romanian.obj: src_c/stem_ISO_8859_2_romanian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_2_romanian.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_2_romanian.Tpo" -c -o stem_ISO_8859_2_romanian.obj `if test -f 'src_c/stem_ISO_8859_2_romanian.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_2_romanian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_2_romanian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_2_romanian.Tpo" "$(DEPDIR)/stem_ISO_8859_2_romanian.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_2_romanian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_2_romanian.c' object='stem_ISO_8859_2_romanian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_2_romanian.obj `if test -f 'src_c/stem_ISO_8859_2_romanian.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_2_romanian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_2_romanian.c'; fi`

stem_UTF_8_romanian.o: src_c/stem_UTF_8_romanian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_romanian.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_romanian.Tpo" -c -o stem_UTF_8_romanian.o `test -f 'src_c/stem_UTF_8_romanian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_romanian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_romanian.Tpo" "$(DEPDIR)/stem_UTF_8_romanian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_romanian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_romanian.c' object='stem_UTF_8_romanian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_romanian.o `test -f 'src_c/stem_UTF_8_romanian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_romanian.c

stem_UTF_8_romanian.obj: src_c/stem_UTF_8_romanian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_romanian.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_romanian.Tpo" -c -o stem_UTF_8_romanian.obj `if test -f 'src_c/stem_UTF_8_romanian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_romanian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_romanian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_romanian.Tpo" "$(DEPDIR)/stem_UTF_8_romanian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_romanian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_romanian.c' object='stem_UTF_8_romanian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_romanian.obj `if test -f 'src_c/stem_UTF_8_romanian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_romanian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_romanian.c'; fi`

stem_KOI8_R_russian.o: src_c/stem_KOI8_R_russian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_KOI8_R_russian.o -MD -MP -MF "$(DEPDIR)/stem_KOI8_R_russian.Tpo" -c -o stem_KOI8_R_russian.o `test -f 'src_c/stem_KOI8_R_russian.c' || echo '$(srcdir)/'`src_c/stem_KOI8_R_russian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_KOI8_R_russian.Tpo" "$(DEPDIR)/stem_KOI8_R_russian.Po"; else rm -f "$(DEPDIR)/stem_KOI8_R_russian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_KOI8_R_russian.c' object='stem_KOI8_R_russian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_KOI8_R_russian.o `test -f 'src_c/stem_KOI8_R_russian.c' || echo '$(srcdir)/'`src_c/stem_KOI8_R_russian.c

stem_KOI8_R_russian.obj: src_c/stem_KOI8_R_russian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_KOI8_R_russian.obj -MD -MP -MF "$(DEPDIR)/stem_KOI8_R_russian.Tpo" -c -o stem_KOI8_R_russian.obj `if test -f 'src_c/stem_KOI8_R_russian.c'; then $(CYGPATH_W) 'src_c/stem_KOI8_R_russian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_KOI8_R_russian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_KOI8_R_russian.Tpo" "$(DEPDIR)/stem_KOI8_R_russian.Po"; else rm -f "$(DEPDIR)/stem_KOI8_R_russian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_KOI8_R_russian.c' object='stem_KOI8_R_russian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_KOI8_R_russian.obj `if test -f 'src_c/stem_KOI8_R_russian.c'; then $(CYGPATH_W) 'src_c/stem_KOI8_R_russian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_KOI8_R_russian.c'; fi`

stem_UTF_8_russian.o: src_c/stem_UTF_8_russian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_russian.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_russian.Tpo" -c -o stem_UTF_8_russian.o `test -f 'src_c/stem_UTF_8_russian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_russian.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_russian.Tpo" "$(DEPDIR)/stem_UTF_8_russian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_russian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_russian.c' object='stem_UTF_8_russian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_russian.o `test -f 'src_c/stem_UTF_8_russian.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_russian.c

stem_UTF_8_russian.obj: src_c/stem_UTF_8_russian.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_russian.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_russian.Tpo" -c -o stem_UTF_8_russian.obj `if test -f 'src_c/stem_UTF_8_russian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_russian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_russian.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_russian.Tpo" "$(DEPDIR)/stem_UTF_8_russian.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_russian.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_russian.c' object='stem_UTF_8_russian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_russian.obj `if test -f 'src_c/stem_UTF_8_russian.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_russian.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_russian.c'; fi`

stem_ISO_8859_1_spanish.o: src_c/stem_ISO_8859_1_spanish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_spanish.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_spanish.Tpo" -c -o stem_ISO_8859_1_spanish.o `test -f 'src_c/stem_ISO_8859_1_spanish.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_spanish.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_spanish.Tpo" "$(DEPDIR)/stem_ISO_8859_1_spanish.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_spanish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_spanish.c' object='stem_ISO_8859_1_spanish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_spanish.o `test -f 'src_c/stem_ISO_8859_1_spanish.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_spanish.c

stem_ISO_8859_1_spanish.obj: src_c/stem_ISO_8859_1_spanish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_spanish.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_spanish.Tpo" -c -o stem_ISO_8859_1_spanish.obj `if test -f 'src_c/stem_ISO_8859_1_spanish.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_spanish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_spanish.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_spanish.Tpo" "$(DEPDIR)/stem_ISO_8859_1_spanish.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_spanish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_spanish.c' object='stem_ISO_8859_1_spanish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_spanish.obj `if test -f 'src_c/stem_ISO_8859_1_spanish.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_spanish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_spanish.c'; fi`

stem_UTF_8_spanish.o: src_c/stem_UTF_8_spanish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_spanish.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_spanish.Tpo" -c -o stem_UTF_8_spanish.o `test -f 'src_c/stem_UTF_8_spanish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_spanish.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_spanish.Tpo" "$(DEPDIR)/stem_UTF_8_spanish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_spanish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_spanish.c' object='stem_UTF_8_spanish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_spanish.o `test -f 'src_c/stem_UTF_8_spanish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_spanish.c

stem_UTF_8_spanish.obj: src_c/stem_UTF_8_spanish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_spanish.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_spanish.Tpo" -c -o stem_UTF_8_spanish.obj `if test -f 'src_c/stem_UTF_8_spanish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_spanish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_spanish.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_spanish.Tpo" "$(DEPDIR)/stem_UTF_8_spanish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_spanish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_spanish.c' object='stem_UTF_8_spanish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_spanish.obj `if test -f 'src_c/stem_UTF_8_spanish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_spanish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_spanish.c'; fi`

stem_ISO_8859_1_swedish.o: src_c/stem_ISO_8859_1_swedish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_swedish.o -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_swedish.Tpo" -c -o stem_ISO_8859_1_swedish.o `test -f 'src_c/stem_ISO_8859_1_swedish.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_swedish.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_swedish.Tpo" "$(DEPDIR)/stem_ISO_8859_1_swedish.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_swedish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_swedish.c' object='stem_ISO_8859_1_swedish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_swedish.o `test -f 'src_c/stem_ISO_8859_1_swedish.c' || echo '$(srcdir)/'`src_c/stem_ISO_8859_1_swedish.c

stem_ISO_8859_1_swedish.obj: src_c/stem_ISO_8859_1_swedish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_ISO_8859_1_swedish.obj -MD -MP -MF "$(DEPDIR)/stem_ISO_8859_1_swedish.Tpo" -c -o stem_ISO_8859_1_swedish.obj `if test -f 'src_c/stem_ISO_8859_1_swedish.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_swedish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_swedish.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_ISO_8859_1_swedish.Tpo" "$(DEPDIR)/stem_ISO_8859_1_swedish.Po"; else rm -f "$(DEPDIR)/stem_ISO_8859_1_swedish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_ISO_8859_1_swedish.c' object='stem_ISO_8859_1_swedish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_ISO_8859_1_swedish.obj `if test -f 'src_c/stem_ISO_8859_1_swedish.c'; then $(CYGPATH_W) 'src_c/stem_ISO_8859_1_swedish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_ISO_8859_1_swedish.c'; fi`

stem_UTF_8_swedish.o: src_c/stem_UTF_8_swedish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_swedish.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_swedish.Tpo" -c -o stem_UTF_8_swedish.o `test -f 'src_c/stem_UTF_8_swedish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_swedish.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_swedish.Tpo" "$(DEPDIR)/stem_UTF_8_swedish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_swedish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_swedish.c' object='stem_UTF_8_swedish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_swedish.o `test -f 'src_c/stem_UTF_8_swedish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_swedish.c

stem_UTF_8_swedish.obj: src_c/stem_UTF_8_swedish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_swedish.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_swedish.Tpo" -c -o stem_UTF_8_swedish.obj `if test -f 'src_c/stem_UTF_8_swedish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_swedish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_swedish.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_swedish.Tpo" "$(DEPDIR)/stem_UTF_8_swedish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_swedish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_swedish.c' object='stem_UTF_8_swedish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_swedish.obj `if test -f 'src_c/stem_UTF_8_swedish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_swedish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_swedish.c'; fi`

stem_UTF_8_turkish.o: src_c/stem_UTF_8_turkish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_turkish.o -MD -MP -MF "$(DEPDIR)/stem_UTF_8_turkish.Tpo" -c -o stem_UTF_8_turkish.o `test -f 'src_c/stem_UTF_8_turkish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_turkish.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_turkish.Tpo" "$(DEPDIR)/stem_UTF_8_turkish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_turkish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_turkish.c' object='stem_UTF_8_turkish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_turkish.o `test -f 'src_c/stem_UTF_8_turkish.c' || echo '$(srcdir)/'`src_c/stem_UTF_8_turkish.c

stem_UTF_8_turkish.obj: src_c/stem_UTF_8_turkish.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stem_UTF_8_turkish.obj -MD -MP -MF "$(DEPDIR)/stem_UTF_8_turkish.Tpo" -c -o stem_UTF_8_turkish.obj `if test -f 'src_c/stem_UTF_8_turkish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_turkish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_turkish.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/stem_UTF_8_turkish.Tpo" "$(DEPDIR)/stem_UTF_8_turkish.Po"; else rm -f "$(DEPDIR)/stem_UTF_8_turkish.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src_c/stem_UTF_8_turkish.c' object='stem_UTF_8_turkish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stem_UTF_8_turkish.obj `if test -f 'src_c/stem_UTF_8_turkish.c'; then $(CYGPATH_W) 'src_c/stem_UTF_8_turkish.c'; else $(CYGPATH_W) '$(srcdir)/src_c/stem_UTF_8_turkish.c'; fi`

api.o: runtime/api.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT api.o -MD -MP -MF "$(DEPDIR)/api.Tpo" -c -o api.o `test -f 'runtime/api.c' || echo '$(srcdir)/'`runtime/api.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/api.Tpo" "$(DEPDIR)/api.Po"; else rm -f "$(DEPDIR)/api.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='runtime/api.c' object='api.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o api.o `test -f 'runtime/api.c' || echo '$(srcdir)/'`runtime/api.c

api.obj: runtime/api.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT api.obj -MD -MP -MF "$(DEPDIR)/api.Tpo" -c -o api.obj `if test -f 'runtime/api.c'; then $(CYGPATH_W) 'runtime/api.c'; else $(CYGPATH_W) '$(srcdir)/runtime/api.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/api.Tpo" "$(DEPDIR)/api.Po"; else rm -f "$(DEPDIR)/api.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='runtime/api.c' object='api.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o api.obj `if test -f 'runtime/api.c'; then $(CYGPATH_W) 'runtime/api.c'; else $(CYGPATH_W) '$(srcdir)/runtime/api.c'; fi`

utilities.o: runtime/utilities.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT utilities.o -MD -MP -MF "$(DEPDIR)/utilities.Tpo" -c -o utilities.o `test -f 'runtime/utilities.c' || echo '$(srcdir)/'`runtime/utilities.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/utilities.Tpo" "$(DEPDIR)/utilities.Po"; else rm -f "$(DEPDIR)/utilities.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='runtime/utilities.c' object='utilities.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o utilities.o `test -f 'runtime/utilities.c' || echo '$(srcdir)/'`runtime/utilities.c

utilities.obj: runtime/utilities.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT utilities.obj -MD -MP -MF "$(DEPDIR)/utilities.Tpo" -c -o utilities.obj `if test -f 'runtime/utilities.c'; then $(CYGPATH_W) 'runtime/utilities.c'; else $(CYGPATH_W) '$(srcdir)/runtime/utilities.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/utilities.Tpo" "$(DEPDIR)/utilities.Po"; else rm -f "$(DEPDIR)/utilities.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='runtime/utilities.c' object='utilities.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o utilities.obj `if test -f 'runtime/utilities.c'; then $(CYGPATH_W) 'runtime/utilities.c'; else $(CYGPATH_W) '$(srcdir)/runtime/utilities.c'; fi`

libstemmer.o: libstemmer/libstemmer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libstemmer.o -MD -MP -MF "$(DEPDIR)/libstemmer.Tpo" -c -o libstemmer.o `test -f 'libstemmer/libstemmer.c' || echo '$(srcdir)/'`libstemmer/libstemmer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libstemmer.Tpo" "$(DEPDIR)/libstemmer.Po"; else rm -f "$(DEPDIR)/libstemmer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libstemmer/libstemmer.c' object='libstemmer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libstemmer.o `test -f 'libstemmer/libstemmer.c' || echo '$(srcdir)/'`libstemmer/libstemmer.c

libstemmer.obj: libstemmer/libstemmer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libstemmer.obj -MD -MP -MF "$(DEPDIR)/libstemmer.Tpo" -c -o libstemmer.obj `if test -f 'libstemmer/libstemmer.c'; then $(CYGPATH_W) 'libstemmer/libstemmer.c'; else $(CYGPATH_W) '$(srcdir)/libstemmer/libstemmer.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libstemmer.Tpo" "$(DEPDIR)/libstemmer.Po"; else rm -f "$(DEPDIR)/libstemmer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libstemmer/libstemmer.c' object='libstemmer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libstemmer.obj `if test -f 'libstemmer/libstemmer.c'; then $(CYGPATH_W) 'libstemmer/libstemmer.c'; else $(CYGPATH_W) '$(srcdir)/libstemmer/libstemmer.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/include $(distdir)/libstemmer $(distdir)/runtime $(distdir)/src_c
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
